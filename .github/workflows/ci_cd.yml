name: CI-CD

on:
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DJANGO_DEBUG: true
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  REGISTRY: ghcr.io
  REDIS_URL: redis://redis:6379/0
  CELERY_RESULT_BACKEND: redis://redis:6379/0
  CELERY_BROKER_URL: redis://redis:6379/0
  NGINX_IMAGE_NAME: emenu124ru/nginx:latest
  DJANGO_IMAGE_NAME: emenu124ru/django:latest
  SWAGGER_IMAGE_NAME: emenu124ru/swagger:latest
  ALEXANDRIA_IMAGE_NAME: emenu124ru/alexandria:latest
  ALEXANDRIA_PORT: 8080
  SWAGGER_PORT: 5000

jobs:
  linters:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Run linters
        run: make linters

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Run tests
        run: make tests-fast
  
  delete-old-packages:
    name: Delete old packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
    - name: Delete old django packages
      uses: actions/delete-package-versions@v4
      with:
        token: ${{ secrets.PAT }}
        package-name: 'django'
        package-type: 'container'
        min-versions-to-keep: 5

    - name: Delete old nginx packages
      uses: actions/delete-package-versions@v4
      with:
        token: ${{ secrets.PAT }}
        package-name: 'nginx'
        package-type: 'container'
        min-versions-to-keep: 5

    - name: Delete old swagger packages
      uses: actions/delete-package-versions@v4
      with:
        token: ${{ secrets.PAT }}
        package-name: 'swagger'
        package-type: 'container'
        min-versions-to-keep: 5
    
    - name: Delete old alexandria packages
      uses: actions/delete-package-versions@v4
      with:
        token: ${{ secrets.PAT }}
        package-name: 'alexandria'
        package-type: 'container'
        min-versions-to-keep: 5

  publish-django:
    name: Publish Django image
    needs: [tests, linters]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build ./server --tag ${{ env.REGISTRY }}/${{ env.DJANGO_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.DJANGO_IMAGE_NAME }}
  
  publish-swagger:
    name: Publish Swagger image
    needs: [tests, linters]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build ./swagger --tag ${{ env.REGISTRY }}/${{ env.SWAGGER_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.SWAGGER_IMAGE_NAME }}

  publish-alexandria:
    name: Publish Alexandria image
    needs: [tests, linters]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build ./alexandria --tag ${{ env.REGISTRY }}/${{ env.ALEXANDRIA_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.ALEXANDRIA_IMAGE_NAME }}

  publish-nginx:
    name: Publish nginx image
    needs: [publish-django, publish-swagger, publish-alexandria]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build ./nginx --tag ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: [publish-nginx]
    steps:
      - uses: actions/checkout@v1

      - name: Executing remote command
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            sudo git pull --rebase origin main
            bash pull-run.sh
