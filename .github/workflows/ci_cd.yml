name: CI-CD

on:
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  REGISTRY: ghcr.io
  NGINX_IMAGE_NAME: emenu124ru/nginx:latest
  DJANGO_IMAGE_NAME: emenu124ru/django:latest

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.5"

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel setuptools poetry
          cd server && poetry install

      - name: Run linters
        run: make linters

  tests:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.5"

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel setuptools poetry
          cd server && poetry install

      - name: Run tests
        run: make tests

  publish-nginx:
    name: publish nginx image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build . -f ./nginx/Dockerfile --tag ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}

  publish-django:
    name: publish django image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Build and Publish
        run: |
          docker build ./server --tag ${{ env.REGISTRY }}/${{ env.DJANGO_IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.DJANGO_IMAGE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: [publish-django, publish-nginx, tests, linter]
    steps:
      - uses: actions/checkout@v1

      - name: Executing remote command
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            sudo git pull --rebase origin main
            bash pull-run.sh
