version: '3.7'

services:
  daphne:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DAPHNE_PORT}
    volumes:
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://0.0.0.0:8008 || echo 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["make", "run-daphne-prod"]

  django:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DJANGO_PORT}
    volumes:
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://0.0.0.0:8000 || echo 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["make", "run-django-prod"]

  nginx:
    image: ghcr.io/emenu124ru/nginx:latest
    depends_on:
      - django
      - daphne
      - swagger-ui
      - certbot
      - alexandria
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./server/media:/nginx/media/
      - ./certbot/conf:/etc/letsencrypt
    env_file:
      - ./.envs/nginx.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s

  celery_worker:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/celery.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
    command: celery --app=config worker --loglevel=DEBUG

  celery_beat:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
      - celery_worker
    env_file:
      - ./.envs/celery.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
    command: celery --app=config beat --scheduler=django --loglevel=DEBUG

  flower:
    image: ghcr.io/emenu124ru/django:latest
    expose:
      - ${FLOWER_PORT}"
    depends_on:
      - postgres
      - redis
      - celery_worker
      - celery_beat
    env_file:
      - ./.envs/celery.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 60s
    command: celery --app=config flower

  redis:
    image: redis:6

  postgres:
    image: postgres:14.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dumps:/dumps
    env_file:
      - ./.envs/postgres.env

  swagger-ui:
    image: ghcr.io/emenu124ru/swagger:latest
    env_file:
      - ./.envs/swagger.env

  alexandria:
    image: ghcr.io/emenu124ru/alexandria:latest
    env_file:
      - ./.envs/alexandria.env

volumes:
  postgres_data:
