version: '3'

volumes:
  postgres_data:

services:
  nginx:
    restart: always
    container_name: nginx
    image: ghcr.io/emenu124ru/nginx:latest
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - django
      - daphne
    ports:
      - 80:80
    volumes:
      - ./server/media:/nginx/media/
  
  daphne:
    restart: always
    container_name: daphne
    image: ghcr.io/emenu124ru/daphne:latest
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
        APP_HOME: "/server"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
    expose:
      - 8080
    command: daphne -b 0.0.0.0 -p 8080 config.asgi:application

  django:
    restart: always
    container_name: django
    image: ghcr.io/emenu124ru/django:latest
    build:
      context: ./server/
      dockerfile: Dockerfile
      args:
        MODE: "--without dev"
        APP_HOME: "/server"
    depends_on:
      - postgres
    expose:
      - 8000
    volumes:
      - ./server/media:/server/media/
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ADMIN_URL=${DJANGO_ADMIN_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    command: gunicorn config.wsgi -c ./config/gunicorn.py

  postgres:
    restart: always
    container_name: postgresql
    image: postgres:14.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dumps:/dumps
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  postgres-backup:
    image: rmiddle/pg_dump:latest
    container_name: postgres-backup
    links:
      - postgres
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}
      - PGHOST=${POSTGRES_HOST}
      - CRON_SCHEDULE=0 0 * * 0
      - DELETE_OLDER_THAN=3
    volumes:
      - ./dumps:/dump
    command: dump-cron
