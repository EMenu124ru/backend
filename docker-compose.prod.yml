version: '3.7'

volumes:
  postgres_data:

services:
  nginx:
    image: ghcr.io/emenu124ru/nginx:latest
    depends_on:
      - django
      - daphne
      - swagger-ui
      - certbot
      - alexandria
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./server/media:/nginx/media/
      - ./certbot/conf:/etc/letsencrypt
    environment:
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - DJANGO_PORT=${DJANGO_PORT}
      - DAPHNE_PORT=${DAPHNE_PORT}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  daphne:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DAPHNE_PORT}
    volumes:
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: curl --fail http://127.0.0.1:${DAPHNE_PORT} || echo 1
      interval: 30s
      timeout: 5s
      retries: 5
    command: ["daphne", "-b", "0.0.0.0", "-p", "${DAPHNE_PORT}", "config.asgi:application", "--access-log", "./logs/daphne.log", "-v", "3"]

  django:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DJANGO_PORT}
    volumes:
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: curl --fail http://127.0.0.1:${DJANGO_PORT} || echo 1
      interval: 30s
      timeout: 5s
      retries: 5
    command: ["gunicorn", "config.wsgi", "-c", "./config/gunicorn.py"]

  redis:
    image: redis:6
    expose:
      - ${REDIS_PORT}

  postgres:
    image: postgres:14.4
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dumps:/dumps
    env_file:
      - ./.envs/postgres.env

  swagger-ui:
    image: ghcr.io/emenu124ru/swagger:latest
    expose:
      - 5050
    environment:
      - PORT=5050

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
    command: ["certonly", "--webroot", "--webroot-path=/etc/letsencrypt", "--expand", "--agree-tos", "--no-eff-email", "-d", "${BACKEND_DOMAIN}"]

  alexandria:
    image: ghcr.io/emenu124ru/alexandria:latest
    expose:
      - 8080
    environment:
      - ALEXANDRIA_YAML=/ws.yml
