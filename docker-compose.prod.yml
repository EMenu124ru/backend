version: '3.7'

services:
  daphne:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DAPHNE_PORT}
    volumes:
      - ./server/credentials/:/server/credentials/
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://0.0.0.0:8008 || echo 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["make", "run-daphne-prod"]

  django:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    expose:
      - ${DJANGO_PORT}
    volumes:
      - ./server/credentials/:/server/credentials/
      - ./server/media:/server/media/
      - ./server/logs/:/server/logs/
    env_file:
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://0.0.0.0:8000 || echo 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["make", "run-django-prod"]

  nginx:
    image: ghcr.io/emenu124ru/nginx:latest
    depends_on:
      - django
      - daphne
      - swagger_ui
      - certbot
      - alexandria
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./server/media:/nginx/media/
      - ./certbot/conf:/etc/letsencrypt
    env_file:
      - ./.envs/nginx.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s

  celery_worker:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/credentials/:/server/credentials/
    env_file:
      - ./.envs/celery.env
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s
    command: ["celery", "-A", "config", "worker", "--loglevel=DEBUG"]

  celery_beat:
    image: ghcr.io/emenu124ru/django:latest
    depends_on:
      - postgres
      - redis
      - celery_worker
    volumes:
      - ./server/credentials/:/server/credentials/
    env_file:
      - ./.envs/celery.env
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s
    command: ["celery", "-A", "config", "beat", "-s", "/var/run/celerybeat-schedule"]

  flower:
    image: ghcr.io/emenu124ru/django:latest
    ports:
      - 5555:5555
    depends_on:
      - postgres
      - redis
      - celery_worker
      - celery_beat
    volumes:
      - ./server/credentials/:/server/credentials/
    env_file:
      - ./.envs/celery.env
      - ./.envs/django.env
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s
    command: ["celery", "-A", "config", "flower", "--url_prefix=flower"]

  redis:
    image: redis:6
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:14.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dumps:/dumps
    env_file:
      - ./.envs/postgres.env

  swagger_ui:
    image: ghcr.io/emenu124ru/swagger:latest
    env_file:
      - ./.envs/swagger.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s

  alexandria:
    image: ghcr.io/emenu124ru/alexandria:latest
    env_file:
      - ./.envs/alexandria.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 20s
        max_attempts: 5
        window: 60s

volumes:
  postgres_data:
  redis_data:
