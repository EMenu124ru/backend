openapi: 3.0.2

info:
  title: EMenu
  version: 0.1.0

tags:
  - name: auth
    description: "Auth namespace"
  - name: clients
    description: "Client namespace"
  - name: employees
    description: "Employee namespace"
  - name: devices
    description: "Device namespace"
  - name: categories
    description: "Category namespace"
  - name: dishes
    description: "Dish namespace"
  - name: restaurants
    description: "Restaurant namespace"
  - name: orders
    description: "Order namespace"
  - name: reservations
    description: "Reservation namespace"
  - name: orderAndDishes
    description: "OrderAndDish namespace"
  - name: stopLists
    description: "StopList namespace"

paths:
  "/api/v1/clients/login":
    post:
      tags:
        - auth
        - clients
      summary: "Авторизация клиента"
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestBodyClient"
      responses:
        "200":
          $ref: "#/components/responses/TokenObtain200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"

  "/api/v1/staff/login":
    post:
      tags:
        - auth
        - employees
      summary: "Авторизация сотрудника"
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestBodyEmployee"
      responses:
        "200":
          $ref: "#/components/responses/TokenObtain200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
  
  "/api/v1/staff/me":
    get:
      tags:
        - employees
      summary: "Просмотр информации о сотруднике"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Employee200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"
  
  "/api/v1/staff/kitchen":
    get:
      tags:
        - employees
      summary: "Просмотр сотрудников с кухни"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/EmployeeList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/devices/":
    post:
      tags:
        - employees
        - devices
      summary: "Создание устройства сотрудника"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/DeviceCreateBody"
      responses:
        "200":
          $ref: "#/components/responses/DeviceCreate201"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/staff":
    get:
      tags:
        - employees
      summary: "Просмотр сотрудников по ролям"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/EmployeeListByRole200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/staff/{employee_id}/schedule":
    get:
      tags:
        - employees
      summary: "Просмотр расписания сотрудника"
      parameters:
        - name: employee_id
          in: path
          schema:
            type: number
          description: "Id сотрудника"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/EmployeeSchedule200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"
  
  "/api/v1/staff/{employee_id}":
    patch:
      tags:
        - employees
      summary: "Редактирование сотрудника менеджером"
      parameters:
        - name: employee_id
          in: path
          schema:
            type: number
          description: "Id сотрудника"
          required: true
      requestBody:
        $ref: "#/components/requestBodies/EmployeeUpdateBody"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Employee200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/employee-schedule/file":
    post:
      tags:
        - employees
      summary: "Добавление расписания сотруднику"
      requestBody:
        $ref: "#/components/requestBodies/XLSXFileCreateBody"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/EmployeeSchedule200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/employee-schedule":
    post:
      tags:
        - employees
      summary: "Добавление расписания сотруднику"
      requestBody:
        $ref: "#/components/requestBodies/EmployeeScheduleCreateBody"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "201":
          $ref: "#/components/responses/EmployeeSchedule201"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/employee-schedule/{schedule_id}":
    patch:
      tags:
        - employees
      summary: "Обновление элемента расписания сотрудника"
      parameters:
        - name: schedule_id
          in: path
          schema:
            type: number
          description: "Id строки расписания"
          required: true
      requestBody:
        $ref: "#/components/requestBodies/EmployeeScheduleUpdateBody"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/EmployeeSchedule200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"
    
    delete:
      tags:
        - employees
      summary: "Удаление элемента расписания сотрудника"
      parameters:
        - name: schedule_id
          in: path
          schema:
            type: number
          description: "Id строки расписания"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "204":
          description: "No Content"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/auth/token/refresh":
    post:
      tags:
        - auth
        - employees
        - clients
      summary: "Обновление токена авторизации"
      security:
        - cookieRefresh: []
      responses:
        "200":
          $ref: "#/components/responses/TokenRefresh200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"

  "/api/v1/clients":
    post:
      tags:
        - clients
      summary: "Регистрация клиента"
      requestBody:
        $ref: "#/components/requestBodies/SignUpRequestBodyClient"
      responses:
        "201":
          $ref: "#/components/responses/ClientCreate201"
        "400":
          $ref: "#/components/responses/BadRequest400"
  
  "/api/v1/clients/me":
    get:
      tags:
        - clients
      summary: "Просмотр информации о текущем клиенте"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Client200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/clients/{client_id}":
    get:
      tags:
        - clients
      summary: "Просмотр информации о клиенте по Id"
      parameters:
        - name: client_id
          in: path
          schema:
            type: number
          description: "Id клиента"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Client200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

    patch:
      tags:
        - clients
      summary: "Обновление информации о клиенте по Id"
      parameters:
        - name: client_id
          in: path
          schema:
            type: number
          description: "Id клиента"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/SignUpRequestBodyClient"
      responses:
        "200":
          $ref: "#/components/responses/Client200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

    delete:
      tags:
        - clients
      summary: "Удаление клиента по Id"
      parameters:
        - name: client_id
          in: path
          schema:
            type: number
          description: "Id клиента"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "204":
          description: "No Content"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/categories":
    get:
      tags:
        - categories
      summary: "Получение списка категорий"
      responses:
        "200":
          $ref: "#/components/responses/CategoryList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/categories/{category_id}":
    get:
      tags:
        - categories
      summary: "Просмотр информации о категории"
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          description: "Id категории"
          required: true
      responses:
        "200":
          $ref: "#/components/responses/Category200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/categories/{category_id}/dishes":
    get:
      tags:
        - categories
        - dishes
      summary: "Просмотр блюд текущей категории"
      description: "При указании restaurant_id отдаются блюда, которые не находятся в стоп листе ресторана, иначе отдаются все блюда"
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          description: "Id категории"
          required: true
        - in: query
          name: restaurant_id
          schema:
            type: number
            nullable: true
          description: "Id ресторана"
          required: false
        - in: query
          name: page
          schema:
            type: number
            nullable: true
          description: "Номер страницы"
          required: false
        - in: query
          name: page_size
          schema:
            type: number
            nullable: true
          description: "Количество элементов на странице"
          required: false
      responses:
        "200":
          $ref: "#/components/responses/DishList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/orders":
    post:
      tags:
        - orders
      summary: "Создание заказа"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/OrderCreateBody"
      responses:
        "201":
          $ref: "#/components/responses/OrderCreate201"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

    get:
      tags:
        - orders
      summary: "Получение списка заказов ресторана"
      description: "Список заказов в зависимости от ресторана сотрудника"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      parameters:
        - in: query
          name: page
          schema:
            type: number
            nullable: true
          description: "Номер страницы"
          required: false
        - in: query
          name: page_size
          schema:
            type: number
            nullable: true
          description: "Количество элементов на странице"
          required: false
      responses:
        "200":
          $ref: "#/components/responses/OrderList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/orders/{order_id}":
    get:
      tags:
        - orders
      summary: "Просмотр заказа"
      parameters:
        - name: order_id
          in: path
          schema:
            type: number
          description: "Id заказа"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Order200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

    patch:
      tags:
        - orders
      summary: "Обновлие заказа"
      parameters:
        - name: order_id
          in: path
          schema:
            type: number
          description: "Id заказа"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/OrderUpdateBody"
      responses:
        "200":
          $ref: "#/components/responses/Order200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/dishes/{dish_id}":
    get:
      tags:
        - dishes
      summary: "Просмотр блюда"
      parameters:
        - name: dish_id
          in: path
          schema:
            type: number
          description: "Id блюда"
          required: true
      responses:
        "200":
          $ref: "#/components/responses/Dish200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/reservations":
    post:
      tags:
        - reservations
      summary: "Бронирование стола"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/ReservationCreateBody"
      responses:
        "201":
          $ref: "#/components/responses/Reservation200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

    get:
      tags:
        - reservations
      summary: "Список броней"
      description: "Список отдается в зависимости от ресторана сотрудника"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      parameters:
        - in: query
          name: page
          schema:
            type: number
            nullable: true
          description: "Номер страницы"
          required: false
        - in: query
          name: page_size
          schema:
            type: number
            nullable: true
          description: "Количество элементов на странице"
          required: false
      responses:
        "200":
          $ref: "#/components/responses/ReservationList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/reservations/{reservation_id}":
    get:
      tags:
        - reservations
      summary: "Получение бронирования"
      parameters:
        - name: reservation_id
          in: path
          schema:
            type: number
          required: true
          description: "Id бронирования"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/Reservation200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

    patch:
      tags:
        - reservations
      summary: "Обновление бронирования"
      parameters:
        - name: reservation_id
          in: path
          schema:
            type: number
          description: "Id бронирования"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/ReservationUpdateBody"
      responses:
        "200":
          $ref: "#/components/responses/Reservation200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/order-and-dishes":
    post:
      tags:
        - orderAndDishes
      summary: "Добавление блюда к заказу"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/OrderAndDishCreateBody"
      responses:
        "201":
          $ref: "#/components/responses/OrderAndDish200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/order-and-dishes/{orderAndDish_id}":
    patch:
      tags:
        - orderAndDishes
      summary: "Обновление блюда в заказе"
      parameters:
        - name: orderAndDish_id
          in: path
          schema:
            type: number
          description: "Id связки ресторана и заказа"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/OrderAndDishUpdateBody"
      responses:
        "200":
          $ref: "#/components/responses/OrderAndDish200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/stop-list":
    post:
      tags:
        - stopLists
      summary: "Добавление ингредиента в стоп-лист"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      requestBody:
        $ref: "#/components/requestBodies/StopListCreateBody"
      responses:
        "201":
          $ref: "#/components/responses/StopListCreate201"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

    get:
      tags:
        - stopLists
      summary: "Получение ингредиентов стоп-листа."
      description: "Отдается в зависимости от ресторана сотрудника"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      parameters:
        - in: query
          name: page
          schema:
            type: number
            nullable: true
          description: "Номер страницы"
          required: false
        - in: query
          name: page_size
          schema:
            type: number
            nullable: true
          description: "Количество элементов на странице"
          required: false
      responses:
        "200":
          $ref: "#/components/responses/StopListList200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"

  "/api/v1/stop-list/{stopList_id}":
    delete:
      tags:
        - stopLists
      summary: "Удаление ингредиента из стоп-листа"
      parameters:
        - name: stopList_id
          in: path
          schema:
            type: number
          description: "Id элемента из стоп-листа"
          required: true
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "204":
          description: "No Content"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

  "/api/v1/restaurants":
    get:
      tags:
        - restaurants
      summary: "Получение списка ресторанов"
      parameters:
        - in: query
          name: page
          schema:
            type: number
            nullable: true
          description: "Номер страницы"
          required: false
        - in: query
          name: page_size
          schema:
            type: number
            nullable: true
          description: "Количество элементов на странице"
          required: false
      responses:
        "200":
          $ref: "#/components/responses/RestaurantList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
  
  "/api/v1/restaurants/places":
    get:
      tags:
        - restaurants
      summary: "Получение столов ресторана, к которому вы прикреплены."
      parameters:
        - name: tags
          in: query
          schema:
            type: array
            items:
              type: integer
          required: false
          description: "Id тегов"
      responses:
        "200":
          $ref: "#/components/responses/PlaceState200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "404":
          $ref: "#/components/responses/NotFound404"
  
  "/api/v1/restaurants/tags":
    get:
      tags:
        - restaurants
      summary: "Получение тегов к столам ресторана, к которому вы прикреплены."
      responses:
        "200":
          $ref: "#/components/responses/TagToPlace200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "404":
          $ref: "#/components/responses/NotFound404"
  
  "/api/v1/ingredients":
    get:
      tags:
        - stopLists
      summary: "Получение всех ингредиентов"
      security:
        - cookieAccess: []
        - cookieCSRF: []
      responses:
        "200":
          $ref: "#/components/responses/IngredientList200"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "403":
          $ref: "#/components/responses/Forbidden403"
        "404":
          $ref: "#/components/responses/NotFound404"

components:
  securitySchemes:
    cookieAccess:
      type: apiKey
      name: access
      in: cookie
    
    cookieRefresh:
      type: apiKey
      name: refresh
      in: cookie

    cookieCSRF:
      type: apiKey
      name: csrftoken
      in: cookie

  schemas:
    ClientBase:
      type: object
      properties:
        id:
          type: number
          description: "Id клиента"
        first_name:
          type: string
          description: "Имя клиента"
        last_name:
          type: string
          description: "Фамилия клиента"
        surname:
          type: string
          description: "Отчество клиента"
        bonuses:
          type: number
          description: "Количество бонусов"
        phone_number:
          type: string
          description: "Телефон клиента"

    EmployeeUpdateBase:
      type: object
      properties:
        first_name:
          type: string
          description: "Имя"
        last_name:
          type: string
          description: "Фамилия"
        surname:
          type: string
          description: "Отчество"
        phone_number:
          type: string
          description: "Телефон"
        date_of_birth:
          type: string
          format: date
          description: "Дата рождения"
        address:
          type: string
          description: "Адрес"
        education:
          type: string
          description: "Образование"
        place_of_birth:
          type: string
          description: "Место рождения"
        citizenship:
          type: string
          description: "Гражданство"
        personnel_number:
          type: integer
          description: "Табельный номер"
        medical_checkup:
          type: string
          format: date
          description: "Дата медицинского осмотра"
        employment_contract:
          type: string
          description: "Трудовой договор"
        work_experience:
          type: string
          description: "Стаж работы"
        role:
          type: string
          description: "Роль сотрудника"
          enum: ["WAITER", "COOK", "CHEF", "SOUS_CHEF", "MANAGER", "HOSTESS"]

    EmployeeBase:
      type: object
      properties:
        id:
          type: number
          description: "Id сотрудника"
        first_name:
          type: string
          description: "Имя"
        last_name:
          type: string
          description: "Фамилия"
        surname:
          type: string
          description: "Отчество"
        phone_number:
          type: string
          description: "Телефон"
        date_of_birth:
          type: string
          format: date
          description: "Дата рождения"
        address:
          type: string
          description: "Адрес"
        education:
          type: string
          description: "Образование"
        place_of_birth:
          type: string
          description: "Место рождения"
        citizenship:
          type: string
          description: "Гражданство"
        personnel_number:
          type: integer
          description: "Табельный номер"
        medical_checkup:
          type: string
          format: date
          description: "Дата медицинского осмотра"
        employment_contract:
          type: string
          description: "Трудовой договор"
        work_experience:
          type: string
          description: "Стаж работы"
        role:
          type: string
          description: "Роль сотрудника"
          enum: ["WAITER", "COOK", "CHEF", "SOUS_CHEF", "MANAGER", "HOSTESS"]
        restaurant:
          type: number
          description: "Id ресторана, за которым закреплен сотрудник"
        image:
          type: object
          properties:
            file:
              type: string
              description: "Ссылка на фото сотрудника"
            filename:
              type: string
              description: "Название изначального файла"
        status:
          type: object
          properties:
            status:
              type: string
              description: "Статус сотрудника"
              enum: ["На смене с {time_start} до {time_finish}", "Будет на смене с {time_start} до {time_finish}", "Выходной", "Больничный", "Отпуск", "Не на смене"]
            const:
              type: string
              description: "Статус сотрудника в виде константы"
              enum: ["ON_WORK_SHIFT_FROM_TO", "WILL_BE_ON_WORK_SHIFT_FROM_TO", "DAY_OFF", "SICK_LEAVE", "VACATION", "NOT_ON_WORK_SHIFT"]
            time_start:
              type: string
              description: "Время начала смены"
              format: date-time
              nullable: true
            time_finish:
              type: string
              description: "Время окончания смены"
              format: date-time
              nullable: true
        email:
          type: string
          format: email
          description: "Почта пользователя"

    DeviceBase:
      type: object
      properties:
        id:
          type: number
        device_id:
          type: string
        registration_id:
          type: string
        type:
          type: string
        user:
          type: number

    DeviceCreateBase:
      type: object
      properties:
        registration_id:
          type: string
        type:
          type: string

    ClientCreateBase:
      type: object
      properties:
        first_name:
          type: string
          description: "Имя клиента"
        last_name:
          type: string
          description: "Фамилия клиента"
        surname:
          type: string
          description: "Отчество клиента"
        password:
          type: string
          description: "Пароль клиента"
        phone_number:
          type: string
          description: "Телефон клиента"

    OrderBase:
      type: object
      properties:
        id:
          type: number
          description: "Id заказа"
        status:
          type: string
          description: "Статус заказа"
          enum: ["DELAYED", "WAITING_FOR_COOKING", "COOKING", "WAITING_FOR_DELIVERY", "IN_PROCESS_DELIVERY", "DELIVERED", "FINISHED", "CANCELED", "PAID"]
        price:
          type: string
          description: "Цена заказа"
        comment:
          type: string
          description: "Комментарий к заказу"
        employee:
          description: "Обслуживающий сотрудник-официант"
          allOf:
            - $ref: "#/components/schemas/EmployeeBase"
          nullable: true
        client:
          description: "Клиент"
          allOf:
            - $ref: "#/components/schemas/ClientBase"
          nullable: true
        dishes:
          type: array
          description: "Блюда заказа"
          items:
            $ref: "#/components/schemas/OrderAndDishBase"
        reservation:
          type: integer
          description: "Id бронирования"
          nullable: true
        place:
          type: string
          description: "Обозначение стола"
          nullable: true
        created:
          description: "Time created"
          type: string
          format: date-time
        modified:
          description: "Time modified"
          type: string
          format: date-time

    OrderCreateBase:
      type: object
      properties:
        comment:
          type: string
          description: "Комментарий к заказу"
        client:
          type: number
          description: "Id клиента"
          nullable: true
        dishes:
          type: array
          description: "Блюда к заказу"
          items:
            type: object
            properties:
              dish:
                type: number
                description: "Id блюда"
              count:
                type: integer
                description: "Количество блюд в заказе"
              comment:
                type: string
                description: "Комментарий к заказу"
        reservation:
          type: number
          description: "Id резервации"
          nullable: true
        place:
          type: number
          description: "Id стола. Нужен для создания пустой резервации"
          nullable: true
    
    OrderUpdateBase:
      type: object
      properties:
        status:
          type: string
          description: "Статус заказа"
          enum: ["FINISHED", "PAID", "CANCELED"]
        comment:
          type: string
          description: "Комментарий к заказу"
        client:
          type: number
          description: "Id клиента"
          nullable: true
        reservation:
          type: number
          description: "Id резервации"
          nullable: true

    OrderCreateReservationBase:
      type: object
      properties:
        comment:
          type: string
          description: "Комментарий к заказу"
        client:
          type: number
          description: "Id клиента"
          nullable: true
        dishes:
          type: array
          description: "Блюда к заказу"
          items:
            type: object
            properties:
              dish:
                type: number
                description: "Id блюда"
              count:
                type: integer
                description: "Количество блюд в заказе"
              comment:
                type: string
                description: "Комментарий к заказу"
        tag_to_place:
          type: number
          description: "Id тэга стола"
          nullable: true
        count_quests:
          type: number
          default: 1
          description: "Количество гостей"
          nullable: true

    CategoryBase:
      type: object
      properties:
        id:
          type: number
          description: "Id категории"
        name:
          type: string
          description: "Название категории"
        icon:
          type: object
          properties:
            file:
              type: string
              description: "Ссылка на иконку категории"
            filename:
              type: string
              description: "Название изначального файла"

    DishImageBase:
      type: object
      properties:
        id:
          type: number
          description: "Id изображения блюда"
        image:
          type: string
          format: binary
          description: "Ссылка на изображение блюда"
        image_name:
          type: string
          format: binary
          description: "Название изначального файла"

    DishBase:
      type: object
      properties:
        id:
          type: number
          description: "Id блюда"
        category:
          description: "Категория блюда"
          allOf:
          - $ref: "#/components/schemas/CategoryBase"
        name:
          type: string
          description: "Название блюда"
        description:
          type: string
          description: "Описание блюда"
        short_description:
          type: string
          description: "Короткое описание блюда"
        price:
          type: string
          description: "Цена блюда"
        compound:
          type: string
          description: "Состав блюда"
        weight:
          type: string
          description: "Вес блюда"
        images:
          type: array
          description: "Изображения блюда"
          items:
            $ref: "#/components/schemas/DishImageBase"

    ReservationCreateBase:
      type: object
      properties:
        arrival_time:
          type: string
          format: date-time
          description: "Время прибытия"
          nullable: true
        restaurant:
          type: number
          description: "Id ресторана"
        order:
          description: "Заказ к ресторану"
          allOf:
            - $ref: "#/components/schemas/OrderCreateReservationBase"
          nullable: true
        place:
          type: number
          description: "Id стола"
        client:
          type: number
          description: "Id клиента"
        comment:
          type: string
          description: "Комментарий к бронированию"
        tag_to_place:
          type: number
          description: "Id тэга стола"
          nullable: true
        count_quests:
          type: number
          default: 1
          description: "Количество гостей"
          nullable: true

    ReservationUpdateBase:
      type: object
      properties:
        arrival_time:
          type: string
          format: date-time
          description: "Время прибытия"
          nullable: true
        status:
          type: string
          description: "Статус бронирования"
          enum: ["OPENED", "FINISHED", "CANCELED"]
          nullable: true
        restaurant:
          type: number
          description: "Id ресторана"
        place:
          type: number
          description: "Id стола"
        client:
          type: number
          description: "Id клиента"
        comment:
          type: string
          description: "Комментарий к бронированию"
        tag_to_place:
          type: number
          description: "Id тэга стола"
          nullable: true
        count_quests:
          type: number
          default: 1
          description: "Количество гостей"
          nullable: true

    ReservationBase:
      type: object
      properties:
        id:
          type: number
          description: "Id бронирования"
        arrival_time:
          type: string
          format: date-time
          description: "Время прибытия"
        status:
          type: string
          description: "Статус бронирования"
          enum: ["OPENED", "FINISHED", "CANCELED"]
        restaurant:
          allOf:
          - $ref: "#/components/schemas/RestaurantBase"
          description: "Ресторан"
        place:
          allOf:
          - $ref: "#/components/schemas/PlaceBase"
          nullable: true
          description: "Стол"
        client:
          allOf:
          - $ref: "#/components/schemas/ClientBase"
          nullable: true
          description: "Клиент"
        comment:
          type: string
          description: "Комментарий к бронированию"
        orders:
          type: array
          items:
            $ref: "#/components/schemas/OrderBase"
        tag_to_place:
          allOf:
          - $ref: "#/components/schemas/TagToPlace"
          nullable: true
          description: "Id тэга стола"
        count_quests:
          type: number
          default: 1
          description: "Количество гостей"
          nullable: true

    RestaurantScheduleBase:
      type: object
      properties:
        id:
          type: number
          description: "Id расписания работы ресторана"
        week_day:
          type: number
          description: "День недели. 0 - понедельник, 6 - воскресенье."
        time_start:
          type: string
          format: time
          description: "Время открытия"
        time_finish:
          type: string
          format: time
          description: "Время закрытия"

    PlaceBase:
      type: object
      properties:
        id:
          type: number
          description: "Id стола"
        place:
          type: string
          description: "Название стола"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagToPlace"

    RestaurantBase:
      type: object
      properties:
        id:
          type: number
          description: "Id ресторана"
        address:
          type: string
          description: "Адрес ресторана"
        schedule:
          type: array
          description: "Расписание ресторана"
          items:
            $ref: "#/components/schemas/RestaurantScheduleBase"

    OrderAndDishCreateBase:
      type: object
      properties:
        order:
          type: number
          description: "Id заказа"
        dish:
          type: number
          description: "Id блюда"
        employee:
          type: number
          description: "Id исполняющего работника-повара"
          nullable: true
        count:
          type: number
          description: "Количество блюд"
        comment:
          type: string
          description: "Комментарий к заказу"
    
    OrderAndDishUpdateBase:
      type: object
      properties:
        status:
          type: string
          description: "Статус блюда к заказу"
          enum: ["WAITING_FOR_COOKING", "COOKING", "DONE", "CANCELED", "DELIVERED"]
        order:
          type: number
          description: "Id заказа"
        dish:
          type: number
          description: "Id блюда"
        employee:
          type: number
          description: "Id исполняющего работника-повара"
          nullable: true
        count:
          type: number
          description: "Количество блюд"
        comment:
          type: string
          description: "Комментарий к заказу"

    OrderAndDishBase:
      type: object
      properties:
        id:
          type: number
          description: "Id блюда к заказу"
        status:
          type: string
          description: "Статус блюда к заказу"
          enum: ["WAITING_FOR_COOKING", "COOKING", "DONE", "CANCELED", "DELIVERED"]
        order:
          type: number
          description: "Id заказа"
        dish:
          description: "Блюдо"
          allOf:
          - $ref: "#/components/schemas/DishBase"
        employee:
          allOf:
          - $ref: "#/components/schemas/EmployeeBase"
          description: "Исполняющий работник-повар"
          nullable: true
        count:
          type: number
          description: "Количество блюд"
        comment:
          type: string
          description: "Комментарий к заказу"
        created:
          description: "Time created"
          type: string
          format: date-time
        modified:
          description: "Time modified"
          type: string
          format: date-time

    StopListCreateBase:
      type: object
      properties:
        ingredient:
          type: number
          description: "Id ингредиента"

    StopListBase:
      type: object
      properties:
        id:
          type: number
          description: "Id элемента стоп-листа"
        ingredient:
          type: object
          properties:
            id:
              type: number
              description: "Id ингредиента"
            name:
              type: string
              description: "Название ингредиента"
        restaurant:
          type: number
          description: "Id ресторана"
        created_at:
          type: string
          format: date-time
          description: "Время добавления в стоп-лист"
        dishes:
          description: "Блюда данного ингредиента"
          type: array
          items:
            $ref: "#/components/schemas/DishBase"
    
    TagToPlace:
      type: object
      properties:
        id:
          type: integer
          description: "Id тега"
        name:
          type: string
          description: "Имя тега"
    
    EmployeeScheduleCreateBase:
      type: object
      properties:
        day:
          type: string
          format: date
          description: "День смены"
        time_start:
          type: string
          format: time
          description: "Время начала смены"
        time_finish:
          type: string
          format: time
          description: "Время конца смены"
        employee:
          type: number
          description: "Id сотрудника"
        type:
          type: string
          description: "Тип времени"
          enum: ["WORK", "SICK_LEAVE", "VACATION", "DAY_OFF"]
    
    EmployeeScheduleBase:
      type: object
      properties:
        id:
          type: number
          description: "Id элемента расписания"
        time_start:
          type: string
          format: date-time
          description: "Время начала смены"
        time_finish:
          type: string
          format: date-time
          description: "Время конца смены"
        employee:
          type: number
          description: "Id сотрудника"
        day:
          type: string
          format: date
          description: "День смены"
        week_day:
          type: number
          enum: [0, 1, 2, 3, 4, 5, 6]
          description: "День недели, где 0 - Понедельник, а 6 - Воскресенье"
        type:
          type: string
          description: "Тип времени"
          enum: ["WORK", "SICK_LEAVE", "VACATION", "DAY_OFF"]

    IngredientBase:
      type: object
      properties:
        id:
          type: number
          description: "Id ингредиента"
        name:
          type: string
          description: "Название ингредиента"

  requestBodies:
    LoginRequestBodyClient:
      content:
        application/json:
          schema:
            type: object
            properties:
              phone_number:
                type: string
                description: "Телефон клиента"
              password:
                type: string
                description: "Пароль клиента"
      required: true

    SignUpRequestBodyClient:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientCreateBase"
      required: true

    LoginRequestBodyEmployee:
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                description: "Логин сотрудника"
              password:
                type: string
                description: "Пароль сотрудника"
      required: true

    DeviceCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeviceCreateBase"
      required: true

    OrderCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderCreateBase"
      required: true

    OrderUpdateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderUpdateBase"
      required: true

    TokenRefreshRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
                description: "refresh token"
      required: true

    ReservationCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReservationCreateBase"
      required: true

    ReservationUpdateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReservationUpdateBase"
      required: true

    OrderAndDishCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderAndDishCreateBase"
      required: true
    
    OrderAndDishUpdateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderAndDishUpdateBase"
      required: true

    StopListCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StopListCreateBase"
      required: true

    EmployeeScheduleUpdateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeScheduleCreateBase"
      required: true

    EmployeeScheduleCreateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeScheduleCreateBase"
      required: true
    
    EmployeeUpdateBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeUpdateBase"
      required: true
    
    
    XLSXFileCreateBody:
      description: "Файлик формата .xlsx"
      content:
        application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
      required: true

  responses:
    TokenObtain200:
      description: "Получение токена. В запросе вернутся cookie с токенами и csrf токен"

    TokenObtain400:
      description: "Ошибка получения токена"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "No active account found with the given credentials"

    TokenRefresh200:
      description: "Получение обновленного токена. В запросе вернутся cookie с токенами и csrf токен"

    TokenRefresh400:
      description: "Ошибка при обновлении токена"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "Token is invalid or expired"
              code:
                type: string
                example: "token_not_valid"
    DeviceCreate201:
      description: "Создание устройства"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeviceBase"

    OrderCreate201:
      description: "Создание заказов"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderBase"

    OrderList200:
      description: "Получение заказов"
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  next:
                    type: string
                    format: url
                    nullable: true
                  previous:
                    type: string
                    format: url
                    nullable: true
              count:
                type: number
              total_pages:
                type: number
              results:
                type: array
                items:
                  $ref: "#/components/schemas/OrderBase"

    Order200:
      description: "Получение заказа"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderBase"

    Client200:
      description: "Получение клиента"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientBase"
    
    ClientCreate201:
      description: "Добавление клиента"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientBase"
    
    Employee200:
      description: "Получение сотрудника"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeBase"
    
    EmployeeList200:
      description: "Получение сотрудников"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EmployeeBase"

    CategoryList200:
      description: "Получение категорий"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CategoryBase"

    Category200:
      description: "Получение категории"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryBase"

    DishList200:
      description: "Получение блюд"
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  next:
                    type: string
                    format: url
                    nullable: true
                  previous:
                    type: string
                    format: url
                    nullable: true
              count:
                type: number
              total_pages:
                type: number
              results:
                type: array
                items:
                  $ref: "#/components/schemas/DishBase"

    Dish200:
      description: "Получение блюда"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DishBase"

    ReservationList200:
      description: "Получение броней"
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  next:
                    type: string
                    format: url
                    nullable: true
                  previous:
                    type: string
                    format: url
                    nullable: true
              count:
                type: number
              total_pages:
                type: number
              results:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationBase"
    
    Reservation200:
      description: "Получение брони"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReservationBase"

    OrderAndDish200:
      description: "Блюдо в заказе"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderAndDishBase"

    StopListCreate201:
      description: "Добавление ингредиента в недоступные"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StopListBase"

    StopListList200:
      description: "Получение списка недоступных блюд"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/StopListBase"

    RestaurantList200:
      description: "Получение списка ресторанов"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/RestaurantBase"
    
    PlaceState200:
      description: "Получение столов ресторана"
      content:
        application/json:
          schema:      
            type: object
            properties:
              free:
                type: array
                description: "Свободные столы"
                items:
                  $ref: "#/components/schemas/PlaceBase"
              reserved:
                type: array
                description: "Забронированные столы"
                items:
                  $ref: "#/components/schemas/PlaceBase"
              busy:
                type: array
                description: "Занятые столы"
                items:
                  $ref: "#/components/schemas/PlaceBase"

    EmployeeListByRole200:
      description: "Получение сотрудников ресторана, к которому прикреплен менеджер"
      content:
        application/json:
          schema:      
            type: object
            properties:
              WAITER:
                type: array
                description: "Официанты ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true
              COOK:
                type: array
                description: "Повара ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true
              CHEF:
                type: array
                description: "Шефы ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true
              SOUS_CHEF:
                type: array
                description: "Су-Шефы ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true
              MANAGER:
                type: array
                description: "Управляющие ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true
              HOSTESS:
                type: array
                description: "Хостес ресторана"
                items:
                  $ref: "#/components/schemas/EmployeeBase"
                nullable: true

    TagToPlace200:
      description: "Получение тегов столов"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagToPlace"
    
    EmployeeSchedule201:
      description: "Создание расписания сотрудника"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EmployeeScheduleBase"
    
    EmployeeSchedule200:
      description: "Получение расписания сотрудника"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EmployeeScheduleBase"
    
    IngredientList200:
      description: "Получение списка ингредиентов"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/IngredientBase"

    BadRequest400:
      description: "BadRequest"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: array
                      items:
                        type: string

    Unauthorized401:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
    
    Forbidden403:
      description: "Forbidden"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string

    NotFound404:
      description: "NotFound"
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
