# Generated by Django 4.2 on 2024-05-11 11:16

import apps.core.models.file
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('restaurants', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('surname', models.CharField(blank=True, default='', max_length=150, null=True, verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Телефонный номер должен быть введен в формате: '+999999999'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефонный номер')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('address', models.TextField(blank=True, default='', verbose_name='Адрес проживания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('WAITER', 'Официант'), ('COOK', 'Повар'), ('CHEF', 'Шеф-повар'), ('SOUS_CHEF', 'Су-Шеф'), ('MANAGER', 'Управляющий'), ('HOSTESS', 'Хостес')], max_length=64, verbose_name='Роль')),
                ('education', models.TextField(blank=True, default='', verbose_name='Образование')),
                ('place_of_birth', models.TextField(blank=True, default='', verbose_name='Место рождения')),
                ('citizenship', models.TextField(blank=True, default='', verbose_name='Гражданство')),
                ('personnel_number', models.PositiveIntegerField(verbose_name='Табельный номер')),
                ('medical_checkup', models.DateField(blank=True, default='', null=True, verbose_name='Медицинский осмотр')),
                ('employment_contract', models.TextField(blank=True, default='', verbose_name='Трудовой договор')),
                ('work_experience', models.TextField(blank=True, default='', verbose_name='Стаж работы')),
                ('image', models.ForeignKey(default=apps.core.models.file.ObjectFile.create_default_object, on_delete=django.db.models.deletion.CASCADE, to='core.objectfile', verbose_name='Фото сотрудника')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='restaurants.restaurant', verbose_name='Ресторан')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='День недели')),
                ('time_start', models.TimeField(verbose_name='Время начала работы')),
                ('time_finish', models.TimeField(verbose_name='Время окончания работы')),
                ('day', models.DateField(verbose_name='Дата')),
                ('is_approve', models.BooleanField(default=True, verbose_name='Подтверждение менеджера')),
                ('type', models.CharField(choices=[('WORK', 'Рабочая смена'), ('SICK_LEAVE', 'Больничный'), ('VACATION', 'Отпуск'), ('DAY_OFF', 'Выходной')], default='WORK', max_length=64, verbose_name='Тип элемента расписания')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='users.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Расписание работы сотрудника',
                'verbose_name_plural': 'Расписания работы сотрудника',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonuses', models.PositiveIntegerField(verbose_name='Бонусы')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
    ]
